simdata <- read.csv("Raw Data File/Supplemental_Data.csv", header = TRUE, stringsAsFactors = FALSE)
simdata <- read.csv("Raw Data File/Supplemental_Data.csv", header = TRUE, stringsAsFactors = FALSE)
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
list.of.packages <- c("fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.package)}
fmsb       # for kmeans function
simdata <- read.csv("Raw Data File/Supplemental_Data.csv", header = TRUE, stringsAsFactors = FALSE)
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
list.of.packages <- c("tidyverse"
"fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
list.of.packages <- c("tidyverse",
"fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.package)}
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
list.of.packages <- c("dplyr",
"fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.package)}
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
list.of.packages <- c("magrittr",
"fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.package)}
packages()
installed.packages()
installed.packages(dplyr)
installed.packages("dplyr")
library(dplyr)
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
new.packages
installed.packages("dplyr")
list.of.packages <- c("magrittr",
"fmsb",
"cluster",
"pryr",
"NbClust",
"class",
"fossil",
"rcompanion",
"plyr",
"fpc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
installed.packages()
installed.packages()[,2]
head(installed.packages())
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"]),]
"dplyr" %in% installed.packages()
list.of.packages
"tidyverse" %in% installed.packages()
"rcompanion" %in% installed.packages()
"magrittr" %in% installed.packages()
"package" %in% installed.packages()
cramerV()
lapply(list.of.packages, require())
list.of.packages
list.of.packages[4]
lapply(list.of.packages, function(x) require(x))
lapply(list.of.packages, function(x){require(x)})
length(list.of.packages)
lapply(1:length(list.of.packages), function(x){require(list.of.packages[x])})
lapply(list.of.packages, require, character.only=T)
simdata <- read.csv("Raw Data File/Supplemental_Data.csv", header = TRUE, stringsAsFactors = FALSE)
mydata <- simdata %>% select(sweet,
salt,
sour,
bitter,
umami)
mydata$tot_taste <- with(mydata, (sweet+salt+sour+bitter+umami))
source('~/Documents/GitHub/taste-profiles/required-packages.R', echo=TRUE)
source('~/Documents/GitHub/taste-profiles/step1-identify_algorithm.R', echo=TRUE)
source('~/Documents/GitHub/taste-profiles/step1-identify_algorithm.R', echo=TRUE)
## save ari.dat and cramv.dat as .rda files ----------------------------------------------------------------------------
saveRDS(as.data.frame(ari.dat), file = "Output/ari_all.rda")
saveRDS(cramv.dat, file = "Output/CramV_all.rda")
source('~/Documents/GitHub/taste-profiles/step1-identify_algorithm.R', echo=TRUE)
ari.sum.plot %<a-% {
with(ari.l.dat,
boxplot(ARI~alg, col=Greys, frame=T, axes=F, ylim=c(0,0.9),
boxwex = 0.5, varwidth=F, ylab="ARI",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0,0.9,0.1))
}
ari.sum.plot
cramv.sum.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
}
cramv.sum.plot
panel.repro.plot %<a-%{
par(mar=c(5.1,5.1,4.1,2.1), mfrow=c(1,2))
ari.sum.plot
cramv.sum.plot
}
pdf("Output/Fig.Panel_ID_Alg.pdf", height=5, width=7)
panel.repro.plot
dev.off()
## save ari.dat and cramv.dat as .rda files ----------------------------------------------------------------------------
saveRDS(as.data.frame(ari.dat), file = "Output/Dat.ARI.rda")
saveRDS(cramv.dat, file = "Output/Dat.CramV.rda")
sample(10000,1) # 2468
N<-2468
Cks<-2:10
par(mfrow=c(1,1), mar=c(5.1,4.1,4.1,2.1), xpd=T)
Wk.fun<-function(Ck){
set.seed(N) # choose a random set.seed, so results can be replicated
kmeans(mydata, Ck, nstart=50)$tot.withinss
}
Wk.dat<-sapply(Cks, Wk.fun)
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
main=("Elbow Plot"), xlab=expression(bold("Number of Clusters, C"[k])),
ylab = "Total Within-Cluster Variance", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
main=("Elbow Plot"), xlab=expression(bold("Number of Clusters, C"[k])),
ylab = "Total Within-Cluster Variance", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
sil.fun<-function(Ck){
set.seed(N)
avg.sil<-mean(silhouette(kmeans(mydata, Ck, nstart=50)$cluster,
dist(mydata))[,3])}
sil.dat<-sapply(Cks, sil.fun)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
main="Average Silhouette Plot",
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
gap.dat<-clusGap(mydata1, kmeans, nstart=50,
K.max = Cks[9], B=50, verbose = FALSE)
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
main ="Gap Statistic Plot", xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
panel.Ck.plot %<a-%{
par(mfrow=c(1,3))
elbow.plot
text(x=0.1, 5097, "A.", font=2, cex=2)
sil.plot
text(x=0.1, 0.44, "B.", font=2, cex=2)
gap.plot
text(x=0.1, 0.4545, "C.", font=2, cex=2)
}
panel.Ck.plot
panel.Ck.plot %<a-%{
par(mfrow=c(1,3))
elbow.plot
sil.plot
gap.plot
}
panel.Ck.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
main=("Elbow Plot"), xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=0.5,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=1,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=1.5,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=2,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=3,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])), line=2.5,
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), line=2.5
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), line=2.5,
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), line=2.5,
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), line=2.5,
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), #line=2.5,
ylab = "Average Silhouette Statistic", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), #line=2.5,
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
elbow.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])), line=2.5,
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
gap.plot
N
gap.plot
gap.plot
panel.Ck.plot
## Save panel.plot as .pdf -------------------------------------------------------------------
pdf("Output/Fig.Panel_Ck.pdf", height=3.5, width=7)
panel.Ck.plot
dev.off()
N<-5793
Wk.fun<-function(Ck){
set.seed(N) # choose a random set.seed, so results can be replicated
kmeans(mydata, Ck, nstart=50)$tot.withinss
}
Wk.dat<-sapply(Cks, Wk.fun)
elbow.plot %<a-% {
plot(Cks, Wk.dat, axes=F, type="b", pch=19, frame = T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
par(mfrow=c(1,1), mar=c(5.1,4.1,4.1,2.1), xpd=T)
elbow.plot
N
sil.fun<-function(Ck){
set.seed(N)
avg.sil<-mean(silhouette(kmeans(mydata, Ck, nstart=50)$cluster,
dist(mydata))[,3])}
sil.dat<-sapply(Cks, sil.fun)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
set.seed(N)
gap.dat<-clusGap(mydata1, kmeans, nstart=50,
K.max = Cks[9], B=50, verbose = FALSE)
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
gap.plot
set.seed(123)
gap.dat<-clusGap(mydata1, kmeans, nstart=50,
K.max = Cks[9], B=50, verbose = FALSE)
gap.dat
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
gap.plot
sil.dat
N
N<-123
sil.fun<-function(Ck){
set.seed(N)
avg.sil<-mean(silhouette(kmeans(mydata, Ck, nstart=50)$cluster,
dist(mydata))[,3])}
sil.dat<-sapply(Cks, sil.fun)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot

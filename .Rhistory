xlab=expression(bold("Number of Clusters, C"[k])),
ylab = expression(bold("W"[k])), font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=2:10)
axis(side=2)
legend("topright", legend = "Optimal Ck: 'Elbow'", bty="n",
text.col = "red", text.font = 3)
}
elbow.plot
par(mfrow=c(1,1), mar=c(5.1,4.1,4.1,2.1), xpd=T)
elbow.plot
N
sil.fun<-function(Ck){
set.seed(N)
avg.sil<-mean(silhouette(kmeans(mydata, Ck, nstart=50)$cluster,
dist(mydata))[,3])}
sil.dat<-sapply(Cks, sil.fun)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
set.seed(N)
gap.dat<-clusGap(mydata1, kmeans, nstart=50,
K.max = Cks[9], B=50, verbose = FALSE)
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
gap.plot
set.seed(123)
gap.dat<-clusGap(mydata1, kmeans, nstart=50,
K.max = Cks[9], B=50, verbose = FALSE)
gap.dat
gap.plot %<a-%{
plot(gap.dat$Tab[2:10,3], type="b", pch=19, frame=T,
xlab=expression(bold("Number of Clusters, C"[k])),
ylab="Gap Statistic", xlim=c(1,9), font.lab=2, cex.lab=1.15, axes=F, cex.main=1.5)
axis(side=1, at=1:9, labels = 2:10)
axis(side=2)
legend("topleft", legend = ("Optimal Ck: Maximum"), bty = "n",
text.col = "red", text.font = 3)
}
gap.plot
sil.dat
N
N<-123
sil.fun<-function(Ck){
set.seed(N)
avg.sil<-mean(silhouette(kmeans(mydata, Ck, nstart=50)$cluster,
dist(mydata))[,3])}
sil.dat<-sapply(Cks, sil.fun)
sil.plot %<a-%{
plot(Cks, sil.dat, type = "b", pch = 19, frame = T,
xlab = expression(bold("Number of Clusters C"[k])),
ylab = "Average Silhouette", font.lab=2, cex.lab=1.15, cex.main=1.5)
axis(side=1, at=seq(3,9,2))
legend("topright", legend = ("Optimal Ck: Maximum"), bty="n",
text.col = "red", text.font = 3)
}
sil.plot
source('~/Documents/GitHub/taste-profiles/Syntax/required-packages.R', echo=TRUE)
source('~/Documents/GitHub/taste-profiles/Syntax/step1-identify_algorithm.R', echo=TRUE)
source('~/Documents/GitHub/taste-profiles/Syntax/required-packages.R', echo=TRUE)
source('~/Documents/GitHub/taste-profiles/Syntax/step1-identify_algorithm.R', echo=TRUE)
panel.repro.plot
ari.long.dat<-reshape(as.data.frame(ari.dat), varying = list(colnames(ari.dat)[1:9]),
timevar = "Ck", v.names = "ARI", direction = "long")
cramv.long.dat<-reshape(as.data.frame(cramv.dat), varying = list(colnames(cramv.dat)[1:9]),
timevar = "Ck", v.names = "CramV", direction = "long")
ari_long.dat<-reshape(as.data.frame(ari.dat), varying = list(colnames(ari.dat)[1:9]),
timevar = "Ck", v.names = "ARI", direction = "long")
cramv_long.dat<-reshape(as.data.frame(cramv.dat), varying = list(colnames(cramv.dat)[1:9]),
timevar = "Ck", v.names = "CramV", direction = "long")
ari.plot %<a-% {
with(ari_long.dat,
boxplot(ARI~alg, col=Greys, frame=T, axes=F, ylim=c(0,0.9),
boxwex = 0.5, varwidth=F, ylab="ARI",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0,0.9,0.1))
points(1:2, ari_means, pch=9, cex=1.5)
legend("topright", legend="Mean ARI",pch=9, pt.cex = 1.15, cex = 1)
}
ari.plot
ari_means <- lapply(1:2, function(x){mean(ari_long.dat$ARI[ari_long.dat$alg==x])})
cramv_means <- lapply(1:2, function(x){mean(cramv_long.dat$CramV[cramv_long.dat$alg==x])})
ari.plot %<a-% {
with(ari_long.dat,
boxplot(ARI~alg, col=Greys, frame=T, axes=F, ylim=c(0,0.9),
boxwex = 0.5, varwidth=F, ylab="ARI",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0,0.9,0.1))
points(1:2, ari_means, pch=9, cex=1.5)
legend("topright", legend="Mean ARI",pch=9, pt.cex = 1.15, cex = 1)
}
ari.plot
ari.plot
cramv_means <- lapply(1:2, function(x){mean(cramv_long.dat$CramV[cramv_long.dat$alg==x])})
cramv.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
points(1:2, cramv_means, pch=9, cex=1.5)
legend("topright", legend = "Mean Cramer's V", pch=9, pt.cex=1.5, cex=1)
}
cramv.plot
cramv.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
points(1:2, cramv_means, pch=9, cex=1.5)
legend("topright", legend = "Mean Cramer's V", pch=9, pt.cex=1.5, cex=1)
}
cramv.plot
cramv.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
points(1:2, cramv_means, pch=9, cex=1.5)
legend("topright", legend = "Mean Cramer's V", pch=9, pt.cex=1.5, cex=1)
}
cramv.plot
cramv.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
points(1:2, cramv_means, pch=9, cex=1.5)
legend("topright", legend = "Mean Cramer's V", pch=9, pt.cex=1.15, cex=0.8)
}
cramv.plot
ari.plot %<a-% {
with(ari_long.dat,
boxplot(ARI~alg, col=Greys, frame=T, axes=F, ylim=c(0,0.9),
boxwex = 0.5, varwidth=F, ylab="ARI",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0,0.9,0.1))
points(1:2, ari_means, pch=9, cex=1.5)
legend("topright", legend="Mean ARI",pch=9, pt.cex = 1.15, cex = 0.8)
}
ari.plot
cramv.plot %<a-% {
with(cramv.l.dat,
boxplot(CramV~alg, col=Greys, frame=T, axes=F, ylim=c(0.2,0.92),
boxwex = 0.5, varwidth=F, ylab="Cramer's V",
xlab=NA, cex.lab=1.15, cex.main=1.25))
axis(side=1, at=c(1,2), labels = c("KCA", "Ward's D"))
axis(side=2, at=seq(0.2,0.92,0.1))
points(1:2, cramv_means, pch=9, cex=1.5)
legend("topright", legend = "Mean Cramer's V", pch=9, pt.cex=1.15, cex=0.8)
}
cramv.plot
panel.repro.plot %<a-%{
par(mar=c(5.1,5.1,4.1,2.1), mfrow=c(1,2))
ari.sum.plot
cramv.sum.plot
}
panel.repro.plot
panel.repro.plot %<a-%{
par(mar=c(5.1,5.1,4.1,2.1), mfrow=c(1,2))
ari.plot
cramv.plot
}
panel.repro.plot
N
set.seed(123)
prof.dat<-kmeans(mydata1, Ck, nstart=25)$cluster
mydata$profile<-as.factor(prof.dat)
prof.sum.dat<-matrix(NA, Ck, 5, dimnames = list(paste("prof", 1:Ck, sep=""), names(mydata1)))
prof.sum.dat
Ck<-4
set.seed(123)
prof.dat<-kmeans(mydata1, Ck, nstart=25)$cluster
mydata$profile<-as.factor(prof.dat)
prof.sum.dat<-matrix(NA, Ck, 5, dimnames = list(paste("prof", 1:Ck, sep=""), names(mydata1)))
prof.sum.dat
for (Ck in 1:Ck){
prof.sum.dat[Ck,]<-sapply(mydata1[mydata$profile==Ck,], mean)
}
with(mydata, for(taste in list(sweet, salt, sour, bitter, umami)){
print(anova(lm(taste~profile))$'Pr(>F)'[1])
}
)
lower<-function(x){mean(x)-sd(x)}
upper<-function(x){mean(x)+sd(x)}
sapply(mydata1, mean)
sapply(mydata, lower)
lower<-function(x){mean(x)-sd(x)}
upper<-function(x){mean(x)+sd(x)}
cohort.sum.dat<-rbind(sapply(mydata1, mean), sapply(mydata1, lower), sapply(mydata1, upper))
cohort.sum.dat
cohort.sum.dat<-rbind(mean=sapply(mydata1, mean), sapply(mydata1, lower), sapply(mydata1, upper))
cohort.sum.dat
cohort.sum.dat<-rbind(mean=sapply(mydata1, mean), lower=sapply(mydata1, lower), upper=sapply(mydata1, upper))
cohort.sum.dat
prof.sum.dat<-matrix(NA, Ck, 5, dimnames = list(paste("prof", 1:Ck, sep=""), names(mydata1)))
for (Ck in 1:Ck){
prof.sum.dat[Ck,]<-sapply(mydata1[mydata$profile==Ck,], mean)
}
with(mydata, for(taste in list(sweet, salt, sour, bitter, umami)){
print(anova(lm(taste~profile))$'Pr(>F)'[1])
}
)
cohort.sum.dat<-rbind(mean=sapply(mydata1, mean), upper=sapply(mydata1, upper), lower=sapply(mydata1, lower))
prof.sum.dat
cohort.sum.dat
cohort.sum.dat<-rbind(upper=sapply(mydata1, upper), lower=sapply(mydata1, lower), mean=sapply(mydata1, mean))
rep(1,4)
Greys
greys2<-c("#E1E1E1", "#626262")
prof_plot.fun = function(prof.sum, Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c("#000000", "#00000020","#00000020","#3C77BC"), cglcol = "grey",
pfcol = c("#00000020","#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c("#00000020", "#00000020","#000000",  "#3C77BC"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(prof.sum.dat, 2)
prof_plot.fun = function(prof.sum, Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(Greys[1], Greys[1],"#00000000", Greys[2]), cglcol = "grey",
pfcol = c("#00000020","#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(Greys[1], Greys[1],"#00000000", Greys[2]), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(prof.sum.dat, 2)
prof_plot.fun = function(prof.sum, Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(Greys[1], Greys[1],"#00000000", Greys[2]), cglcol = "grey",
pfcol = c(Greys[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(Greys[1], Greys[1],"#00000000", Greys[2]), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(prof.sum.dat, 2)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
prof_plot.fun(prof.sum.dat, 2)
greys2
col2rgb("#E1E1E1")
rgb(225, 225, 225, alpha=50)
rgb(225, 225, 225, alpha=0.50)
col2rgb("#626262")
t.col2<-rgb(98, 98, 98, max=225, alpha=.5)
t.col2
t.col2<-rgb(225, 225, 225, max=225, alpha=.5)
t.col2
greys.t<-c("#FFFFFF01", "#6F6F6F01")
prof_plot.fun = function(prof.sum, Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c((greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
#### Prepare Figure 3 ########################################################################
## Plot spider plots for each taste perception profile ----------------------------------
profs.plot %<a-% {
for (i in 1:Ck){
(spider.fun(prof.sum.dat, i))
}
}
## print plots, 1 at a time -------------------------------------------------------------
profs.plot
## Save plots as .pdf -------------------------------------------------------------------
pdf("Output/P4.Plot_Profs.pdf")
profs.plot
dev.off()
prof_plot.fun = function(prof.sum, Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(3)
greys.t<-c("#FFFFFF01", "#6F6F6F01")
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], grey.t[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(2)
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], greys.t[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys.t[1], greys.t[1], greys.t[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
# mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
#    font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(1)
greys<-c("#E1E1E150", "#62626250")
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
pfcol = c(greys.t[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
# mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
#    font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
pfcol = c(greys[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
# mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
#    font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(2)
greys<-c("#E1E1E110", "#62626210")
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
pfcol = c(greys[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
# mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
#    font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(2)
greys<-c("#E1E1E190", "#62626290")
prof_plot.fun = function(Ck){
# Define margines for plot1 (with shading)
par(fig=c(0.01,0.99,0.01,0.99))
# Compile data; use descr.dat from Part 1 (specify order: Mean, +1SD, -1SD)
data<-as.data.frame(rbind(rep(5,5), rep(0,5), cohort.sum.dat, prof.sum.dat[Ck,]))
# Create spider plot with shading
radarchart(data, maxmin = T, caxislabels = NA, seg=5, pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
pfcol = c(greys[1],"#FFFFFF",NA,NA), cglwd = 1, cglty = 3, vlabels = NA)
#Define margins for plot2 - (without shading)
par(fig=c(0.01,0.99,0.01,0.99), new=TRUE)
# Create spider plot to overlay
radarchart(data, maxmin=T, caxislabels = NA, seg=5,pty=NA, plwd = c(2,2,3,6), plty=c(1,1,1,1),
pcol= c(greys[1], greys[1], greys[2], "#000000"), cglcol = "grey",
axislabcol = "black", cglwd = 1, cglty = 3, vlcex = 2)
# Add title with n = # participants with each profile
# mtext(text = paste("(n = ", sum(ifelse(mydata$profile == Ck,1,0)), ")", sep=""),
#    font=4, at=0, cex = 2, padj=-0.3, col="#3C77BC")
}
prof_plot.fun(2)
prof_plot.fun(4)
prof_plot.fun(2)
profs.plot %<a-% {
for (i in 1:Ck){
(spider.fun(i))
}
}
profs.plot
profs.plot %<a-% {
for (i in 1:Ck){
(prof_plot.fun(i))
}
}
profs.plot
